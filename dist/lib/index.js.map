{"version":3,"sources":["../../lib/index.js"],"names":["i18n","callback","context","language","viewer","getAttribute","test","url","bundle","identifier","translator","json","cache","key","separator","undefined","keys","split","value","length","shift","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","status","statusText","JSON","parse","responseText","e","open","send","Error"],"mappings":"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","sourcesContent":["/* global bundle, viewer */\n/**\n * Promises a translator function, which takes a key and returns a value.\n *\n * The `i18n` internationalization fetches a JSON translation file named\n *\n * ```js\n * `translation.${language}.json`\n * ```\n *\n * from a `url`, where it (and the `language`) are determined by default\n * by the `context` of a dizmo! But, by providing a custom `context` (to\n * `i18n` as a 2nd argument) these defaults can be overridden (and hence\n * decoupled from a dizmo).\n *\n * If a `callback` -- with an `(error, t)` signature -- is provided then\n * *instead* of returning a promise (for the translator), the `callback`\n * is invoked with `(null, t)` arguments (in case of a success), or with\n * `(error, null)` arguments (in case of an error), e.g.:\n *\n * ```js\n * i18n((e, t) => { if (e) console.error(e) else ... })\n * ```\n *\n * If the `callback` is *not* provided, then the translator function `t`\n * is returned, or a corresponding error exception is thrown, e.g.:\n *\n * ```js\n * let t; try { t = await i18n(); ... } catch (e) { console.error(e) }\n * ```\n *\n * Once the translator function `t` is successfully acquired, it can be\n * used to access (deeply nested) keys, e.g.:\n *\n * ```js\n * const value_a = t('my/example/key/a');\n * ```\n * ```js\n * const value_b = t('my.example.key.a');\n * ```\n *\n * By default, only the forward slash `/` and the period `.` separators\n * are available. However, it is possible to provide custom separators,\n * via either a string or a regular expression:\n *\n * ```js\n * const value_c = t('my:example:key:c', ':');\n * ```\n * ```js\n * const value_d = t('my|example|key|c', /|/);\n * ```\n *\n * @param {(error:any,t:Function)|undefined} callback\n *  a function with an `(error, t)` signature, where `t` is a translator\n *  with the `(key: string, separator: string|RegEx)` signature\n *\n * @param {{language:Function,url:Function}|undefined} context\n *  an (optional) dictionary with context information for the `language`\n *  and `url` selectors\n *\n * @returns {Promise<Function>|undefined}\n *  a promise for a translator `t` (or `undefined` if the `callback` has\n *  been provided))\n */\nexport function i18n(callback, context = {\n    language: () => {\n        const language = viewer.getAttribute('settings/language');\n        return /c/i.test(language) ? 'en' : language;\n    },\n    url: (language) => {\n        return `/bundles/${bundle.identifier}` +\n            `/assets/locales/translation.${language}.json`;\n    }\n}) {\n    const translator =\n        (json, cache = {}) => (key = '', separator = /\\/|\\./) =>\n    {\n        if (typeof json !== 'object' || !json) {\n            return undefined;\n        }\n        if (typeof key !== 'string') {\n            return undefined;\n        }\n        if (key in cache) {\n            return cache[key];\n        }\n        let keys = key.split(separator), value = json;\n        while (key && keys.length > 0) {\n            if (typeof value !== 'object' || value === null) {\n                break;\n            }\n            value = value[keys.shift()];\n        }\n        if (key && keys.length > 0) {\n            return cache[key] = undefined;\n        }\n        return cache[key] = value;\n    };\n    if (typeof callback === 'undefined' || callback === null) {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.addEventListener('load', function () {\n                if (this.status !== 200) {\n                    reject(this.statusText);\n                } else {\n                    let json = null;\n                    try {\n                        json = JSON.parse(this.responseText);\n                    } catch (e) {\n                        reject(e);\n                    }\n                    resolve(translator(json))\n                }\n            });\n            xhr.addEventListener('error', function () {\n                reject(this.responseText);\n            });\n            xhr.open('GET', context.url(context.language()));\n            xhr.send();\n        });\n    }\n    if (typeof callback === 'function') {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', function () {\n            if (this.status !== 200) {\n                callback(this.statusText, null);\n            } else {\n                let json = null;\n                try {\n                    json = JSON.parse(this.responseText);\n                } catch (e) {\n                    callback(e, null);\n                }\n                callback(null, translator(json));\n            }\n        });\n        xhr.addEventListener('error', function () {\n            callback(this.responseText, null);\n        });\n        xhr.open('GET', context.url(context.language()));\n        xhr.send();\n    } else {\n        throw new Error('callback not a function');\n    }\n}\nexport default i18n;\n"],"file":"index.js"}